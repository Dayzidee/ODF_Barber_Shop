"""Initial migration with all models

Revision ID: 6488fc96b1cd
Revises: 
Create Date: 2025-06-13 13:57:12.950990

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '6488fc96b1cd'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('odf_barbers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('phone', sa.String(length=20), nullable=False),
    sa.Column('bio', sa.Text(), nullable=True),
    sa.Column('profile_image', sa.String(length=200), nullable=True),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('is_master', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_table('odf_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('odf_services',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('price', sa.Numeric(precision=10, scale=2), nullable=False),
    sa.Column('duration_minutes', sa.Integer(), nullable=False),
    sa.Column('is_active', sa.Boolean(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('odf_time_slots',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('period', sa.Enum('MORNING', 'AFTERNOON', 'EVENING', name='timeslotperiod'), nullable=False),
    sa.Column('is_available', sa.Boolean(), nullable=False),
    sa.Column('max_appointments', sa.Integer(), nullable=False),
    sa.Column('current_appointments', sa.Integer(), nullable=False),
    sa.Column('barber_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.CheckConstraint('current_appointments <= max_appointments', name='check_appointment_limit'),
    sa.ForeignKeyConstraint(['barber_id'], ['odf_barbers.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('date', 'period', 'barber_id', name='_date_period_barber_uc')
    )
    with op.batch_alter_table('odf_time_slots', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_odf_time_slots_date'), ['date'], unique=False)

    op.create_table('odf_appointments',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('customer_name', sa.String(length=100), nullable=False),
    sa.Column('customer_phone', sa.String(length=20), nullable=False),
    sa.Column('customer_email', sa.String(length=120), nullable=False),
    sa.Column('is_first_time_customer', sa.Boolean(), nullable=True),
    sa.Column('time_slot_id', sa.Integer(), nullable=False),
    sa.Column('barber_id', sa.Integer(), nullable=False),
    sa.Column('status', sa.Enum('PENDING', 'CONFIRMED', 'COMPLETED', 'CANCELLED', 'RESCHEDULED', 'NO_SHOW', name='appointmentstatus'), nullable=False),
    sa.Column('address_street', sa.String(length=200), nullable=False),
    sa.Column('address_city', sa.String(length=100), nullable=False),
    sa.Column('address_postal_code', sa.String(length=20), nullable=False),
    sa.Column('address_gmaps_link', sa.String(length=500), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('estimated_duration', sa.Integer(), nullable=True),
    sa.Column('estimated_price', sa.Numeric(precision=10, scale=2), nullable=True),
    sa.Column('submitted_at', sa.DateTime(), nullable=True),
    sa.Column('updated_at', sa.DateTime(), nullable=True),
    sa.Column('confirmed_at', sa.DateTime(), nullable=True),
    sa.Column('completed_at', sa.DateTime(), nullable=True),
    sa.Column('cancelled_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['barber_id'], ['odf_barbers.id'], ),
    sa.ForeignKeyConstraint(['time_slot_id'], ['odf_time_slots.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('odf_appointments', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_odf_appointments_customer_email'), ['customer_email'], unique=False)
        batch_op.create_index(batch_op.f('ix_odf_appointments_customer_phone'), ['customer_phone'], unique=False)
        batch_op.create_index(batch_op.f('ix_odf_appointments_status'), ['status'], unique=False)

    op.create_table('odf_appointment_services',
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['odf_appointments.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['odf_services.id'], ),
    sa.PrimaryKeyConstraint('appointment_id', 'service_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('odf_appointment_services')
    with op.batch_alter_table('odf_appointments', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_odf_appointments_status'))
        batch_op.drop_index(batch_op.f('ix_odf_appointments_customer_phone'))
        batch_op.drop_index(batch_op.f('ix_odf_appointments_customer_email'))

    op.drop_table('odf_appointments')
    with op.batch_alter_table('odf_time_slots', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_odf_time_slots_date'))

    op.drop_table('odf_time_slots')
    op.drop_table('odf_services')
    op.drop_table('odf_feedback')
    op.drop_table('odf_barbers')
    # ### end Alembic commands ###
