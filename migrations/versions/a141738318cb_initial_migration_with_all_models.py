"""Initial migration with all models

Revision ID: a141738318cb
Revises: 
Create Date: 2025-06-13 11:29:24.680149

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'a141738318cb'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('odf_feedback',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=100), nullable=False),
    sa.Column('email', sa.String(length=120), nullable=False),
    sa.Column('message', sa.Text(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('appointment_services',
    sa.Column('appointment_id', sa.Integer(), nullable=False),
    sa.Column('service_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['odf_appointments.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['odf_services.id'], ),
    sa.PrimaryKeyConstraint('appointment_id', 'service_id')
    )
    op.drop_table('odf_appointment_services')
    op.drop_table('feedback')
    with op.batch_alter_table('odf_appointments', schema=None) as batch_op:
        batch_op.alter_column('address_street',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               nullable=True)
        batch_op.alter_column('address_city',
               existing_type=sa.VARCHAR(length=100),
               nullable=True)
        batch_op.alter_column('address_postal_code',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('status',
               existing_type=sa.VARCHAR(length=11),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.drop_index(batch_op.f('ix_odf_appointments_customer_email'))
        batch_op.drop_index(batch_op.f('ix_odf_appointments_customer_phone'))
        batch_op.drop_index(batch_op.f('ix_odf_appointments_status'))
        batch_op.drop_column('cancelled_at')
        batch_op.drop_column('updated_at')
        batch_op.drop_column('estimated_duration')
        batch_op.drop_column('completed_at')
        batch_op.drop_column('confirmed_at')
        batch_op.drop_column('estimated_price')

    with op.batch_alter_table('odf_barbers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('is_master', sa.Boolean(), nullable=True))
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=True)
        batch_op.alter_column('profile_image',
               existing_type=sa.VARCHAR(length=200),
               type_=sa.String(length=255),
               existing_nullable=True)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('odf_services', schema=None) as batch_op:
        batch_op.alter_column('price',
               existing_type=sa.NUMERIC(precision=10, scale=2),
               type_=sa.Float(),
               existing_nullable=False)
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    with op.batch_alter_table('odf_time_slots', schema=None) as batch_op:
        batch_op.alter_column('period',
               existing_type=sa.VARCHAR(length=9),
               type_=sa.String(length=50),
               existing_nullable=False)
        batch_op.alter_column('is_available',
               existing_type=sa.BOOLEAN(),
               nullable=True)
        batch_op.alter_column('max_appointments',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.alter_column('current_appointments',
               existing_type=sa.INTEGER(),
               nullable=True)
        batch_op.drop_constraint(batch_op.f('_date_period_barber_uc'), type_='unique')
        batch_op.drop_index(batch_op.f('ix_odf_time_slots_date'))
        batch_op.drop_column('updated_at')
        batch_op.drop_column('created_at')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('odf_time_slots', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.create_index(batch_op.f('ix_odf_time_slots_date'), ['date'], unique=False)
        batch_op.create_unique_constraint(batch_op.f('_date_period_barber_uc'), ['date', 'period', 'barber_id'])
        batch_op.alter_column('current_appointments',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('max_appointments',
               existing_type=sa.INTEGER(),
               nullable=False)
        batch_op.alter_column('is_available',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('period',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=9),
               existing_nullable=False)

    with op.batch_alter_table('odf_services', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('price',
               existing_type=sa.Float(),
               type_=sa.NUMERIC(precision=10, scale=2),
               existing_nullable=False)

    with op.batch_alter_table('odf_barbers', schema=None) as batch_op:
        batch_op.add_column(sa.Column('created_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.alter_column('is_active',
               existing_type=sa.BOOLEAN(),
               nullable=False)
        batch_op.alter_column('profile_image',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               existing_nullable=True)
        batch_op.alter_column('phone',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.drop_column('is_master')

    with op.batch_alter_table('odf_appointments', schema=None) as batch_op:
        batch_op.add_column(sa.Column('estimated_price', sa.NUMERIC(precision=10, scale=2), nullable=True))
        batch_op.add_column(sa.Column('confirmed_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('completed_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('estimated_duration', sa.INTEGER(), nullable=True))
        batch_op.add_column(sa.Column('updated_at', sa.DATETIME(), nullable=True))
        batch_op.add_column(sa.Column('cancelled_at', sa.DATETIME(), nullable=True))
        batch_op.create_index(batch_op.f('ix_odf_appointments_status'), ['status'], unique=False)
        batch_op.create_index(batch_op.f('ix_odf_appointments_customer_phone'), ['customer_phone'], unique=False)
        batch_op.create_index(batch_op.f('ix_odf_appointments_customer_email'), ['customer_email'], unique=False)
        batch_op.alter_column('status',
               existing_type=sa.String(length=50),
               type_=sa.VARCHAR(length=11),
               existing_nullable=False)
        batch_op.alter_column('address_postal_code',
               existing_type=sa.VARCHAR(length=20),
               nullable=False)
        batch_op.alter_column('address_city',
               existing_type=sa.VARCHAR(length=100),
               nullable=False)
        batch_op.alter_column('address_street',
               existing_type=sa.String(length=255),
               type_=sa.VARCHAR(length=200),
               nullable=False)

    op.create_table('feedback',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('name', sa.VARCHAR(length=120), nullable=False),
    sa.Column('email', sa.VARCHAR(length=120), nullable=False),
    sa.Column('message', sa.TEXT(), nullable=False),
    sa.Column('created_at', sa.DATETIME(), nullable=True),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('odf_appointment_services',
    sa.Column('appointment_id', sa.INTEGER(), nullable=False),
    sa.Column('service_id', sa.INTEGER(), nullable=False),
    sa.ForeignKeyConstraint(['appointment_id'], ['odf_appointments.id'], ),
    sa.ForeignKeyConstraint(['service_id'], ['odf_services.id'], ),
    sa.PrimaryKeyConstraint('appointment_id', 'service_id')
    )
    op.drop_table('appointment_services')
    op.drop_table('odf_feedback')
    # ### end Alembic commands ###
